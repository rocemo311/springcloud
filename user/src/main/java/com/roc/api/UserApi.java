/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.roc.api;

import com.roc.model.Result;
import com.roc.model.User;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-09-10T03:26:41.186Z")

@Api(value = "user", description = "the user API")
public interface UserApi {

    @ApiOperation(value = "修改用户", nickname = "", notes = "修改用户", response = Result.class, tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "用户修改成功", response = Result.class),
        @ApiResponse(code = 500, message = "用户修改失败", response = Result.class) })
    @RequestMapping(value = "/user",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Result> (@ApiParam(value = "修改用户的实体对象" ,required=true )  @Valid @RequestBody User body);


    @ApiOperation(value = "创建用户", nickname = "", notes = "创建用户", response = Result.class, tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "用户创建成功", response = Result.class),
        @ApiResponse(code = 500, message = "用户创建失败", response = Result.class) })
    @RequestMapping(value = "/user",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Result> (@ApiParam(value = "创建用户的实体对象" ,required=true )  @Valid @RequestBody User body);


    @ApiOperation(value = "根据id删除用户", nickname = "deleteUserById", notes = "根据id删除用户", response = Result.class, tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "根据id删除用户信息成功", response = Result.class),
        @ApiResponse(code = 404, message = "未找到相关用户信息", response = Result.class),
        @ApiResponse(code = 500, message = "根据id删除用户信息成功失败", response = Result.class) })
    @RequestMapping(value = "/user/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Result> deleteUserById(@ApiParam(value = "用户id，必填",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "根据id获取用户信息", nickname = "getUserById", notes = "根据id获取用户信息", response = User.class, tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "根据id获取用户信息成功", response = User.class),
        @ApiResponse(code = 404, message = "未找到相关用户信息", response = Result.class),
        @ApiResponse(code = 500, message = "根据id获取用户信息成功失败", response = Result.class) })
    @RequestMapping(value = "/user/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<User> getUserById(@ApiParam(value = "用户id，必填",required=true) @PathVariable("id") String id);

}
